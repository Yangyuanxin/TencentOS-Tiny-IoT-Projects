<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <name>TencentOS_tiny</name>
  <description>CMSIS (Common Microcontroller Software Interface Standard)</description>
  <vendor>Tencent</vendor>
  <!-- <license>license.txt</license> -->
  <url>http://www.keil.com/pack/</url>
  <supportContact>https://github.com/Tencent/TencentOS-tiny</supportContact>
  <license>Docs/license.txt</license>

  <releases>
    <release version="1.6.0" date="2021-09-6">
      Active development ...
      CMSIS-RTOS: 1.6.0
        - TencentOS tiny:Use CMSIS:CORE

    </release>   
    <release version="1.5.0" date="2021-09-3">
      Active development ...
      CMSIS-RTOS: 1.5.0
        - TencentOS tiny:Add CMSIS-RTOS 'main' function template

    </release>     
    <release version="1.4.0" date="2021-09-2">
      Active development ...
      CMSIS-RTOS: 1.4.0
        - TencentOS tiny:Use CMSIS:CORE

    </release>      
    <release version="1.3.8" date="2021-08-25">
      Active development ...
      CMSIS-RTOS: 1.3.0
        - TencentOS tiny:Add the port
                  1.3.8
        - TencentOS tiny:Add the CPU and Compiler dependent
    </release>    
    <release version="1.2.0" date="2021-08-23">
      Active development ...
      CMSIS-RTOS: 1.2.0
        - TencentOS tiny:Add automatic recognition headers
        - TencentOS tiny:Fixed error when SystemCoreClock is not defined

    </release>  
    <release version="1.1.0" date="2021-08-15">
      Active development ...
      CMSIS-RTOS: 1.1.0
        - TencentOS tiny:Modifying software Packages TencentOS tiny

    </release>
    <release version="1.0.1" date="2021-08-10">
      CMSIS-RTOS:
        - Add TencentOS tiny 1.0.1 

    </release>
  </releases>   

  <taxonomy>
    <description Cclass="Audio">Software components for audio processing</description>
    <description Cclass="Board Support">Generic Interfaces for Evaluation and Development Boards</description>
    <description Cclass="Board Part">Drivers that support an external component available on an evaluation board</description>
    <description Cclass="Compiler">Compiler Software Extensions</description>
    <description Cclass="CMSIS" doc="CMSIS/Documentation/General/html/index.html">Cortex Microcontroller Software Interface Components</description>
    <description Cclass="CMSIS Driver" doc="CMSIS/Documentation/Driver/html/index.html">Unified Device Drivers compliant to CMSIS-Driver Specifications</description>
    <description Cclass="Device" doc="CMSIS/Documentation/Core/html/index.html">Startup, System Setup</description>
    <description Cclass="Data Exchange">Data exchange or data formatter</description>
    <description Cclass="Extension Board">Drivers that support an extension board or shield</description>
    <description Cclass="File System">File Drive Support and File System</description>
    <description Cclass="IoT Client">IoT cloud client connector</description>
    <description Cclass="IoT Service">IoT specific services</description>
    <description Cclass="IoT Utility">IoT specific software utility</description>
    <description Cclass="Graphics">Graphical User Interface</description>
    <description Cclass="Network">Network Stack using Internet Protocols</description>
    <description Cclass="RTOS">Real-time Operating System</description>
    <description Cclass="Security">Encryption for secure communication or storage</description>
    <description Cclass="USB">Universal Serial Bus Stack</description>
    <description Cclass="Utility">Generic software utility components</description>
  </taxonomy>

  <devices>
    <!-- ******************************  Cortex-M0  ****************************** -->
    <family Dfamily="ARM Cortex M0" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.dui0497a/index.html" title="Cortex-M0 Device Generic Users Guide"/>
      <description>
The Cortex-M0 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM0.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM0">
        <processor Dcore="Cortex-M0" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM0/Include/ARMCM0.h" define="ARMCM0"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M0P  ****************************** -->
    <family Dfamily="ARM Cortex M0 plus" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.dui0662b/index.html" title="Cortex-M0+ Device Generic Users Guide"/>
      <description>
The Cortex-M0+ processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM0P.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM0P">
        <processor Dcore="Cortex-M0+" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM0plus/Include/ARMCM0plus.h" define="ARMCM0P"/>
      </device>

      <device Dname="ARMCM0P_MPU">
        <processor Dcore="Cortex-M0+" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM0plus/Include/ARMCM0plus_MPU.h" define="ARMCM0P_MPU"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M1  ****************************** -->
    <family Dfamily="ARM Cortex M1" Dvendor="ARM:82">
      <!--book name="http://infocenter.arm.com/help/topic/com.arm.doc.dui0497a/index.html" title="Cortex-M1 Device Generic Users Guide"/-->
      <description>
The ARM Cortex-M1 FPGA processor is intended for deeply embedded applications that require a small processor integrated into an FPGA.
The ARM Cortex-M1 processor implements the ARMv6-M architecture profile.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM0.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM1">
        <processor Dcore="Cortex-M1" DcoreVersion="r1p0" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM1/Include/ARMCM1.h" define="ARMCM1"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M3  ****************************** -->
    <family Dfamily="ARM Cortex M3" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.dui0552a/index.html" title="Cortex-M3 Device Generic Users Guide"/>
      <description>
The Cortex-M3 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM3.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM3">
        <processor Dcore="Cortex-M3" DcoreVersion="r2p1" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM3/Include/ARMCM3.h" define="ARMCM3"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M4  ****************************** -->
    <family Dfamily="ARM Cortex M4" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.dui0553a/index.html" title="Cortex-M4 Device Generic Users Guide"/>
      <description>
The Cortex-M4 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM4.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM4">
        <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM4/Include/ARMCM4.h"    define="ARMCM4"/>
      </device>

      <device Dname="ARMCM4_FP">
        <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="SP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM4/Include/ARMCM4_FP.h" define="ARMCM4_FP"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M7  ****************************** -->
    <family Dfamily="ARM Cortex M7" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.dui0646b/index.html" title="Cortex-M7 Device Generic Users Guide"/>
      <description>
The Cortex-M7 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM7.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM7">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM7/Include/ARMCM7.h" define="ARMCM7"/>
      </device>

      <device Dname="ARMCM7_SP">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM7/Include/ARMCM7_SP.h" define="ARMCM7_SP"/>
      </device>

      <device Dname="ARMCM7_DP">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p0" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM7/Include/ARMCM7_DP.h" define="ARMCM7_DP"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M23  ********************** -->
    <family Dfamily="ARM Cortex M23" Dvendor="ARM:82">
      <!--book name="Device/ARM/Documents/??_dgug.pdf"       title="?? Device Generic Users Guide"/-->
      <description>
The Arm Cortex-M23 is based on the Armv8-M baseline architecture.
It is the smallest and most energy efficient Arm processor with Arm TrustZone technology.
Cortex-M23 is the ideal processor for constrained embedded applications requiring efficient security.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM23.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM23">
        <processor Dcore="Cortex-M23" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM23/Include/ARMCM23.h" define="ARMCM23"/>
      </device>

      <device Dname="ARMCM23_TZ">
        <processor Dcore="Cortex-M23" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMCM23/Include/ARMCM23_TZ.h" define="ARMCM23_TZ"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M33  ****************************** -->
    <family Dfamily="ARM Cortex M33" Dvendor="ARM:82">
      <!--book name="Device/ARM/Documents/??_dgug.pdf"       title="?? Device Generic Users Guide"/-->
      <description>
The Arm Cortex-M33 is the most configurable of all Cortex-M processors. It is a full featured microcontroller
class processor based on the Armv8-M mainline architecture with Arm TrustZone security.
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMCM33.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"          default="1"/-->

      <device Dname="ARMCM33">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, no TrustZone
        </description>
        <compile header="Device/ARM/ARMCM33/Include/ARMCM33.h" define="ARMCM33"/>
      </device>

      <device Dname="ARMCM33_TZ">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMCM33/Include/ARMCM33_TZ.h" define="ARMCM33_TZ"/>
      </device>

      <device Dname="ARMCM33_DSP_FP">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, no TrustZone
        </description>
        <compile header="Device/ARM/ARMCM33/Include/ARMCM33_DSP_FP.h" define="ARMCM33_DSP_FP"/>
      </device>

      <device Dname="ARMCM33_DSP_FP_TZ">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMCM33/Include/ARMCM33_DSP_FP_TZ.h" define="ARMCM33_DSP_FP_TZ"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M35P  ****************************** -->
    <family Dfamily="ARM Cortex M35P" Dvendor="ARM:82">
      <!--book name="Device/ARM/Documents/??_dgug.pdf"       title="?? Device Generic Users Guide"/-->
      <description>
The Arm Cortex-M35P is the most configurable of all Cortex-M processors. It is a full featured microcontroller
class processor based on the Armv8-M mainline architecture with Arm TrustZone security designed for a broad range of secure embedded applications.
      </description>

      <!-- debug svd="Device/ARM/SVD/ARMCM35P.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"          default="1"/-->

      <device Dname="ARMCM35P">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, no TrustZone
        </description>
        <compile header="Device/ARM/ARMCM35P/Include/ARMCM35P.h" define="ARMCM35P"/>
      </device>

      <device Dname="ARMCM35P_TZ">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMCM35P/Include/ARMCM35P_TZ.h" define="ARMCM35P_TZ"/>
      </device>

      <device Dname="ARMCM35P_DSP_FP">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, no TrustZone
        </description>
        <compile header="Device/ARM/ARMCM35P/Include/ARMCM35P_DSP_FP.h" define="ARMCM35P_DSP_FP"/>
      </device>

      <device Dname="ARMCM35P_DSP_FP_TZ">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMCM35P/Include/ARMCM35P_DSP_FP_TZ.h" define="ARMCM35P_DSP_FP_TZ"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M55  ****************************** -->
    <family Dfamily="ARM Cortex M55" Dvendor="ARM:82">
      <!--book name="Device/ARM/Documents/Arm Cortex-M55 Processor Datasheet.pdf" title="Arm Cortex-M55 Processor Datasheet"/-->
      <description>
The Arm Cortex-M55 processor is a fully synthesizable, mid-range, microcontroller-class processor that implements the Armv8.1-M mainline architecture and includes support for the M-profile Vector Extension (MVE), also known as Arm Helium technology.
It is Arm's most AI-capable Cortex-M processor, delivering enhanced, energy-efficient digital signal processing (DSP) and machine learning (ML) performance.
The Cortex-M55 processor achieves high compute performance across scalar and vector operations, while maintaining low energy consumption.
      </description>

      <!-- debug svd="Device/ARM/SVD/ARMCM55.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00000000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x30000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20000000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM55">
        <processor Dcore="Cortex-M55" DcoreVersion="r0p0" Dfpu="DP_FPU" Dmpu="MPU" Dmve="FP_MVE" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          Floating Point Vector Extensions, DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMCM55/Include/ARMCM55.h" define="ARMCM55"/>
      </device>
    </family>

    <!-- ******************************  ARMSC000  ****************************** -->
    <family Dfamily="ARM SC000" Dvendor="ARM:82">
      <description>
The Arm SC000 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of secure embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMSC000.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMSC000">
        <processor Dcore="SC000" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMSC000/Include/ARMSC000.h" define="ARMSC000"/>
      </device>
    </family>

    <!-- ******************************  ARMSC300  ****************************** -->
    <family Dfamily="ARM SC300" Dvendor="ARM:82">
      <description>
The ARM SC300 processor is an entry-level 32-bit ARM Cortex processor designed for a broad range of secure embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMSC300.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMSC300">
        <processor Dcore="SC300" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMSC300/Include/ARMSC300.h" define="ARMSC300"/>
      </device>
    </family>

    <!-- ******************************  ARMv8-M Baseline  ********************** -->
    <family Dfamily="ARMv8-M Baseline" Dvendor="ARM:82">
      <!--book name="Device/ARM/Documents/ARMv8MBL_dgug.pdf"       title="ARMv8MBL Device Generic Users Guide"/-->
      <description>
Armv8-M Baseline based device with TrustZone
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMv8MBL.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMv8MBL">
        <processor Dcore="ARMV8MBL" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <compile header="Device/ARM/ARMv8MBL/Include/ARMv8MBL.h" define="ARMv8MBL"/>
      </device>
    </family>

    <!-- ******************************  ARMv8-M Mainline  ****************************** -->
    <family Dfamily="ARMv8-M Mainline" Dvendor="ARM:82">
      <!--book name="Device/ARM/Documents/ARMv8MML_dgug.pdf"       title="ARMv8MML Device Generic Users Guide"/-->
      <description>
Armv8-M Mainline based device with TrustZone
      </description>
      <!-- debug svd="Device/ARM/SVD/ARMv8MML.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMv8MML">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMv8MML/Include/ARMv8MML.h" define="ARMv8MML"/>
      </device>

      <device Dname="ARMv8MML_DSP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMv8MML/Include/ARMv8MML_DSP.h" define="ARMv8MML_DSP"/>
      </device>

      <device Dname="ARMv8MML_SP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMv8MML/Include/ARMv8MML_SP.h" define="ARMv8MML_SP"/>
      </device>

      <device Dname="ARMv8MML_DSP_SP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMv8MML/Include/ARMv8MML_DSP_SP.h" define="ARMv8MML_DSP_SP"/>
      </device>

      <device Dname="ARMv8MML_DP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="DP_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMv8MML/Include/ARMv8MML_DP.h" define="ARMv8MML_DP"/>
      </device>

      <device Dname="ARMv8MML_DSP_DP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="DP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMv8MML/Include/ARMv8MML_DSP_DP.h" define="ARMv8MML_DSP_DP"/>
      </device>
    </family>

    <!-- ******************************  ARMv8.1-M Mainline  ****************************** -->
    <family Dfamily="ARMv8.1-M Mainline" Dvendor="ARM:82">
      <!--book name="Device/ARM/Documents/ARMv8MML_dgug.pdf"       title="ARMv8MML Device Generic Users Guide"/-->
      <description>
Armv8.1-M Mainline based device with TrustZone and MVE
      </description>
      <!-- <debug svd="Device/ARM/SVD/ARMv8MML.svd"/> -->
      <memory id="IROM1"                                start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00000000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x30000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20000000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="Device/ARM/Flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->


      <device Dname="ARMv81MML_DSP_DP_MVE_FP">
        <processor Dcore="ARMV81MML" DcoreVersion="r0p0" Dfpu="DP_FPU" Dmpu="MPU" Dmve="FP_MVE" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          Double Precision Vector Extensions, DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="Device/ARM/ARMv81MML/Include/ARMv81MML_DSP_DP_MVE_FP.h" define="ARMv81MML_DSP_DP_MVE_FP"/>
      </device>
    </family>

    <!-- ******************************  Cortex-A5  ****************************** -->
    <family Dfamily="ARM Cortex A5" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.ddi0433c/index.html" title="Cortex-A5 Technical Reference Manual"/>
      <description>
The Arm Cortex-A5 processor is a high-performance, low-power, Arm macrocell with an L1 cache subsystem that provides full
virtual memory capabilities. The Cortex-A5 processor implements the Armv7-A architecture profile and can execute 32-bit
Arm instructions and 16-bit and 32-bit Thumb instructions. The Cortex-A5 is the smallest member of the Cortex-A processor family.
      </description>

      <memory id="IROM1"                                start="0x00000000" size="0x04000000" startup="1" default="1"/> <!-- 64MB NOR -->
      <memory id="IROM2"                                start="0x0C000000" size="0x04000000" startup="0" default="0"/> <!-- 64MB NOR -->
      <memory id="IRAM1"                                start="0x14000000" size="0x02000000" init   ="0" default="1"/> <!-- 32MB SRAM -->
      <memory id="IRAM2"                                start="0x80000000" size="0x40000000" init   ="0" default="0"/> <!-- 1GB DRAM -->

      <device Dname="ARMCA5">
        <processor Dcore="Cortex-A5" DcoreVersion="r0p1" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="12000000"/>
        <compile header="Device/ARM/ARMCA5/Include/ARMCA5.h" define="ARMCA5"/>
      </device>
    </family>

    <!-- ******************************  Cortex-A7  ****************************** -->
    <family Dfamily="ARM Cortex A7" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.ddi0464f/index.html" title="Cortex-A7 MPCore Technical Reference Manual"/>
      <description>
The Cortex-A7 MPCore processor is a high-performance, low-power processor that implements the Armv7-A architecture.
The Cortex-A7 MPCore processor has one to four processors in a single multiprocessor device with a L1 cache subsystem,
an optional integrated GIC, and an optional L2 cache controller.
      </description>

      <memory id="IROM1"                                start="0x00000000" size="0x04000000" startup="1" default="1"/> <!-- 64MB NOR -->
      <memory id="IROM2"                                start="0x0C000000" size="0x04000000" startup="0" default="0"/> <!-- 64MB NOR -->
      <memory id="IRAM1"                                start="0x14000000" size="0x02000000" init   ="0" default="1"/> <!-- 32MB SRAM -->
      <memory id="IRAM2"                                start="0x80000000" size="0x40000000" init   ="0" default="0"/> <!-- 1GB DRAM -->

      <device Dname="ARMCA7">
        <processor Dcore="Cortex-A7" DcoreVersion="r0p5" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="12000000"/>
        <compile header="Device/ARM/ARMCA7/Include/ARMCA7.h" define="ARMCA7"/>
      </device>
    </family>

    <!-- ******************************  Cortex-A9  ****************************** -->
    <family Dfamily="ARM Cortex A9" Dvendor="ARM:82">
      <book name="http://infocenter.arm.com/help/topic/com.arm.doc.100511_0401_10_en/index.html" title="Cortex-A9 Technical Reference Manual"/>
      <description>
The Cortex-A9 processor is a high-performance, low-power, Arm macrocell with an L1 cache subsystem that provides full virtual memory capabilities.
The Cortex-A9 processor implements the Armv7-A architecture and runs 32-bit Arm instructions, 16-bit and 32-bit Thumb instructions,
and 8-bit Java bytecodes in Jazelle state.
      </description>

      <memory id="IROM1"                                start="0x00000000" size="0x04000000" startup="1" default="1"/> <!-- 64MB NOR -->
      <memory id="IROM2"                                start="0x0C000000" size="0x04000000" startup="0" default="0"/> <!-- 64MB NOR -->
      <memory id="IRAM1"                                start="0x14000000" size="0x02000000" init   ="0" default="1"/> <!-- 32MB SRAM -->
      <memory id="IRAM2"                                start="0x80000000" size="0x40000000" init   ="0" default="0"/> <!-- 1GB DRAM -->

      <device Dname="ARMCA9">
        <processor Dcore="Cortex-A9" DcoreVersion="r4p1" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="12000000"/>
        <compile header="Device/ARM/ARMCA9/Include/ARMCA9.h" define="ARMCA9"/>
      </device>
    </family>
  </devices>


  <apis>
    <!-- CMSIS Device API -->
    <api Cclass="Device" Cgroup="IRQ Controller" Capiversion="1.0.0" exclusive="1">
      <description>Device interrupt controller interface</description>
      <files>
        <file category="header" name="CMSIS/Core_A/Include/irq_ctrl.h"/>
      </files>
    </api>
    <api Cclass="Device" Cgroup="OS Tick" Capiversion="1.0.1" exclusive="1">
      <description>RTOS Kernel system tick timer interface</description>
      <files>
        <file category="header" name="CMSIS/RTOS2/Include/os_tick.h"/>
      </files>
    </api>
    <!-- CMSIS-RTOS API -->
    <api Cclass="CMSIS" Cgroup="RTOS" Capiversion="1.0.0" exclusive="1">
      <description>CMSIS-RTOS API for Cortex-M, SC000, and SC300</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/RTOS/html/index.html"/>
      </files>
    </api>
    <api Cclass="CMSIS" Cgroup="RTOS2" Capiversion="2.1.3" exclusive="1">
      <description>CMSIS-RTOS API for Cortex-M, SC000, and SC300</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/RTOS2/html/index.html"/>
        <file category="header" name="CMSIS/RTOS2/Include/cmsis_os2.h"/>
      </files>
    </api>
    <!-- CMSIS Driver API -->
    <api Cclass="CMSIS Driver" Cgroup="USART" Capiversion="2.4.0" exclusive="0">
      <description>USART Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__usart__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_USART.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="SPI" Capiversion="2.3.0" exclusive="0">
      <description>SPI Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__spi__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_SPI.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="SAI" Capiversion="1.2.0" exclusive="0">
      <description>SAI Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__sai__interface__gr.html"/>
        <file category="header" name="CMSIS/Driver/Include/Driver_SAI.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="I2C" Capiversion="2.4.0" exclusive="0">
      <description>I2C Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__i2c__interface__gr.html"/>
        <file category="header" name="CMSIS/Driver/Include/Driver_I2C.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="CAN" Capiversion="1.3.0" exclusive="0">
      <description>CAN Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__can__interface__gr.html"/>
        <file category="header" name="CMSIS/Driver/Include/Driver_CAN.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Flash" Capiversion="2.3.0" exclusive="0">
      <description>Flash Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__flash__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_Flash.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="MCI" Capiversion="2.4.0" exclusive="0">
      <description>MCI Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__mci__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_MCI.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="NAND" Capiversion="2.4.0" exclusive="0">
      <description>NAND Flash Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__nand__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_NAND.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Ethernet" Capiversion="2.2.0" exclusive="0">
      <description>Ethernet MAC and PHY Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__eth__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_ETH_MAC.h" />
        <file category="header" name="CMSIS/Driver/Include/Driver_ETH_PHY.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Ethernet MAC" Capiversion="2.2.0" exclusive="0">
      <description>Ethernet MAC Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__eth__mac__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_ETH_MAC.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Ethernet PHY" Capiversion="2.2.0" exclusive="0">
      <description>Ethernet PHY Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__eth__phy__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_ETH_PHY.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="USB Device" Capiversion="2.3.0" exclusive="0">
      <description>USB Device Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__usbd__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_USBD.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="USB Host" Capiversion="2.3.0" exclusive="0">
      <description>USB Host Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__usbh__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_USBH.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="WiFi" Capiversion="1.1.0" exclusive="0">
      <description>WiFi driver</description>
      <files>
        <file category="doc" name="CMSIS/Documentation/Driver/html/group__wifi__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/Include/Driver_WiFi.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="VIO" Capiversion="0.1.0" exclusive="1">
      <description>Virtual I/O</description>
      <files>
        <file category="doc"    name="CMSIS/Documentation/Driver/html/group__vio__interface__gr.html" />
        <file category="header" name="CMSIS/Driver/VIO/Include/cmsis_vio.h" />
        <file category="other"  name="CMSIS/Driver/VIO/cmsis_vio.scvd" />
      </files>
    </api>
  </apis>

  <!-- conditions are dependency rules that can apply to a component or an individual file -->
  <conditions>
    <!-- compiler -->
    <condition id="ARMCC6">
      <accept Tcompiler="ARMCC" Toptions="AC6"/>
      <accept Tcompiler="ARMCC" Toptions="AC6LTO"/>
    </condition>
    <condition id="ARMCC5">
      <require Tcompiler="ARMCC" Toptions="AC5"/>
    </condition>
    <condition id="ARMCC">
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="GCC">
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="IAR">
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="ARMCC GCC">
      <accept Tcompiler="ARMCC"/>
      <accept Tcompiler="GCC"/>
    </condition>
    <condition id="ARMCC GCC IAR">
      <accept Tcompiler="ARMCC"/>
      <accept Tcompiler="GCC"/>
      <accept Tcompiler="IAR"/>
    </condition>

    <!-- Arm architecture -->
    <condition id="ARMv6-M Device">
      <description>Armv6-M architecture based device</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M1"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
    </condition>
    <condition id="ARMv7-M Device">
      <description>Armv7-M architecture based device</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="Cortex-M4"/>
      <accept Dcore="Cortex-M7"/>
      <accept Dcore="SC300"/>
    </condition>
    <condition id="ARMv8-M Device">
      <description>Armv8-M architecture based device</description>
      <accept Dcore="ARMV8MBL"/>
      <accept Dcore="ARMV8MML"/>
      <accept Dcore="ARMV81MML"/>
      <accept Dcore="Cortex-M23"/>
      <accept Dcore="Cortex-M33"/>
      <accept Dcore="Cortex-M35P"/>
      <accept Dcore="Cortex-M55"/>
    </condition>
    <condition id="ARMv6_7-M Device">
      <description>Armv6_7-M architecture based device</description>
      <accept condition="ARMv6-M Device"/>
      <accept condition="ARMv7-M Device"/>
    </condition>
    <condition id="ARMv6_7_8-M Device">
      <description>Armv6_7_8-M architecture based device</description>
      <accept condition="ARMv6-M Device"/>
      <accept condition="ARMv7-M Device"/>
      <accept condition="ARMv8-M Device"/>
    </condition>
    <condition id="ARMv7-A Device">
      <description>Armv7-A architecture based device</description>
      <accept Dcore="Cortex-A5"/>
      <accept Dcore="Cortex-A7"/>
      <accept Dcore="Cortex-A9"/>
    </condition>

    <condition id="TrustZone">
      <description>TrustZone</description>
      <require Dtz="TZ"/>
    </condition>
    <condition id="TZ Secure">
      <description>TrustZone (Secure)</description>
      <require Dtz="TZ"/>
      <require Dsecure="Secure"/>
    </condition>
    <condition id="TZ Non-secure">
      <description>TrustZone (Non-secure)</description>
      <require Dtz="TZ"/>
      <accept Dsecure="Non-secure"/>
      <accept Dsecure="TZ-disabled"/>
    </condition>
    <condition id="TZ Unavailable">
      <description>TrustZone not available</description>
      <deny Dtz="TZ"/>
    </condition>

    <!-- ARM core -->
    <condition id="CM0">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
    </condition>
    <condition id="CM1">
      <description>Cortex-M1</description>
      <require Dcore="Cortex-M1"/>
    </condition>
    <condition id="CM3">
      <description>Cortex-M3 or SC300 processor based device</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
    </condition>
    <condition id="CM4">
      <description>Cortex-M4 processor based device</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU"/>
    </condition>
    <condition id="CM4_FP">
      <description>Cortex-M4 processor based device using Floating Point Unit</description>
      <accept Dcore="Cortex-M4" Dfpu="FPU"/>
      <accept Dcore="Cortex-M4" Dfpu="SP_FPU"/>
      <accept Dcore="Cortex-M4" Dfpu="DP_FPU"/>
    </condition>
    <condition id="CM7">
      <description>Cortex-M7 processor based device</description>
      <require Dcore="Cortex-M7" Dfpu="NO_FPU"/>
    </condition>
    <condition id="CM7_FP">
      <description>Cortex-M7 processor based device using Floating Point Unit</description>
      <accept Dcore="Cortex-M7" Dfpu="SP_FPU"/>
      <accept Dcore="Cortex-M7" Dfpu="DP_FPU"/>
    </condition>
    <!-- <condition id="CM23">
      <description>Cortex-M23 processor based device</description>
      <require Dcore="Cortex-M23"/>
    </condition>
    <condition id="CM33">
      <description>Cortex-M33 processor based device</description>
      <require Dcore="Cortex-M33" Dfpu="NO_FPU"/>
    </condition>
    <condition id="CM33_FP">
      <description>Cortex-M33 processor based device using Floating Point Unit</description>
      <require Dcore="Cortex-M33" Dfpu="SP_FPU"/>
    </condition>
    <condition id="CM35P">
      <description>Cortex-M35P processor based device</description>
      <require Dcore="Cortex-M35P" Dfpu="NO_FPU"/>
    </condition>
    <condition id="CM35P_FP">
      <description>Cortex-M35P processor based device using Floating Point Unit</description>
      <require Dcore="Cortex-M35P" Dfpu="SP_FPU"/>
    </condition>
    <condition id="ARMv8MBL">
      <description>Armv8-M Baseline processor based device</description>
      <require Dcore="ARMV8MBL"/>
    </condition>
    <condition id="ARMv8MML">
      <description>Armv8-M Mainline processor based device</description>
      <require Dcore="ARMV8MML" Dfpu="NO_FPU"/>
    </condition>
    <condition id="ARMv8MML_FP">
      <description>Armv8-M Mainline processor based device using Floating Point Unit</description>
      <accept Dcore="ARMV8MML" Dfpu="SP_FPU"/>
      <accept Dcore="ARMV8MML" Dfpu="DP_FPU"/>
    </condition>

    <condition id="CM55_NOFPU_NOMVE">
      <description>Cortex-M55, no FPU, no MVE</description>
      <require Dcore="Cortex-M55" Dfpu="NO_FPU" Dmve="NO_MVE"/>
    </condition>
    <condition id="CM55_NOFPU_MVE">
      <description>Cortex-M55, no FPU, MVE</description>
      <accept  Dcore="Cortex-M55" Dfpu="NO_FPU" Dmve="MVE"/>
      <accept  Dcore="Cortex-M55" Dfpu="NO_FPU" Dmve="FP_MVE"/>
    </condition>
    <condition id="CM55_FPU">
      <description>Cortex-M55, FPU</description>
      <accept  Dcore="Cortex-M55" Dfpu="SP_FPU"/>
      <accept  Dcore="Cortex-M55" Dfpu="DP_FPU"/>
    </condition>

    <condition id="CA5_CA9">
      <description>Cortex-A5 or Cortex-A9 processor based device</description>
      <accept Dcore="Cortex-A5"/>
      <accept Dcore="Cortex-A9"/>
    </condition>

    <condition id="CA7">
      <description>Cortex-A7 processor based device</description>
      <accept Dcore="Cortex-A7"/>
    </condition> -->

    <!-- ARMCC compiler -->
    <!-- <condition id="CA_ARMCC5">
      <description>Cortex-A5, Cortex-A7 or Cortex-A9 processor based device for the Arm Compiler 5</description>
      <require condition="ARMv7-A Device"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CA_ARMCC6">
      <description>Cortex-A5, Cortex-A7 or Cortex-A9 processor based device for the Arm Compiler 6</description>
      <require condition="ARMv7-A Device"/>
      <require condition="ARMCC6"/>
    </condition> -->

    <condition id="CM0_ARMCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device for the Arm Compiler</description>
      <require condition="CM0"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <!-- <condition id="CM0_ARMCC5">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device for the Arm Compiler 5</description>
      <require condition="CM0"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CM0_ARMCC6">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device for the Arm Compiler 6</description>
      <require condition="CM0"/>
      <require condition="ARMCC6"/>
    </condition> -->
    <condition id="CM0_LE_ARMCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in little endian mode for the Arm Compiler</description>
      <require condition="CM0_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM0_BE_ARMCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in big endian mode for the Arm Compiler</description>
      <require condition="CM0_ARMCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM1_ARMCC">
      <description>Cortex-M1 based device for the Arm Compiler</description>
      <require condition="CM1"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <!-- <condition id="CM1_ARMCC5">
      <description>Cortex-M1 based device for the Arm Compiler 5</description>
      <require condition="CM1"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CM1_ARMCC6">
      <description>Cortex-M1 based device for the Arm Compiler 6</description>
      <require condition="CM1"/>
      <require condition="ARMCC6"/>
    </condition> -->
    <condition id="CM1_LE_ARMCC">
      <description>Cortex-M1 based device in little endian mode for the Arm Compiler</description>
      <require condition="CM1_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM1_BE_ARMCC">
      <description>Cortex-M1 based device in big endian mode for the Arm Compiler</description>
      <require condition="CM1_ARMCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM3_ARMCC">
      <description>Cortex-M3 or SC300 processor based device for the Arm Compiler</description>
      <require condition="CM3"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <!-- <condition id="CM3_ARMCC5">
      <description>Cortex-M3 or SC300 processor based device for the Arm Compiler 5</description>
      <require condition="CM3"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CM3_ARMCC6">
      <description>Cortex-M3 or SC300 processor based device for the Arm Compiler 6</description>
      <require condition="CM3"/>
      <require condition="ARMCC6"/>
    </condition> -->
    <condition id="CM3_LE_ARMCC">
      <description>Cortex-M3 or SC300 processor based device in little endian mode for the Arm Compiler</description>
      <require condition="CM3_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM3_BE_ARMCC">
      <description>Cortex-M3 or SC300 processor based device in big endian mode for the Arm Compiler</description>
      <require condition="CM3_ARMCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM4_ARMCC">
      <description>Cortex-M4 processor based device for the Arm Compiler</description>
      <require condition="CM4"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <!-- <condition id="CM4_ARMCC5">
      <description>Cortex-M4 processor based device for the Arm Compiler 5</description>
      <require condition="CM4"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CM4_ARMCC6">
      <description>Cortex-M4 processor based device for the Arm Compiler 6</description>
      <require condition="CM4"/>
      <require condition="ARMCC6"/>
    </condition> -->
    <condition id="CM4_LE_ARMCC">
      <description>Cortex-M4 processor based device in little endian mode for the Arm Compiler</description>
      <require condition="CM4_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM4_BE_ARMCC">
      <description>Cortex-M4 processor based device in big endian mode for the Arm Compiler</description>
      <require condition="CM4_ARMCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM4_FP_ARMCC">
      <description>Cortex-M4 processor based device using Floating Point Unit for the Arm Compiler</description>
      <require condition="CM4_FP"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <!-- <condition id="CM4_FP_ARMCC5">
      <description>Cortex-M4 processor based device using Floating Point Unit for the Arm Compiler 5</description>
      <require condition="CM4_FP"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CM4_FP_ARMCC6">
      <description>Cortex-M4 processor based device using Floating Point Unit for the Arm Compiler 6</description>
      <require condition="CM4_FP"/>
      <require condition="ARMCC6"/>
    </condition> -->
    <condition id="CM4_FP_LE_ARMCC">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the Arm Compiler</description>
      <require condition="CM4_FP_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM4_FP_BE_ARMCC">
      <description>Cortex-M4 processor based device using Floating Point Unit in big endian mode for the Arm Compiler</description>
      <require condition="CM4_FP_ARMCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM7_ARMCC">
      <description>Cortex-M7 processor based device for the Arm Compiler</description>
      <require condition="CM7"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <!-- <condition id="CM7_ARMCC5">
      <description>Cortex-M7 processor based device for the Arm Compiler 5</description>
      <require condition="CM7"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CM7_ARMCC6">
      <description>Cortex-M7 processor based device for the Arm Compiler 6</description>
      <require condition="CM7"/>
      <require condition="ARMCC6"/>
    </condition> -->
    <condition id="CM7_LE_ARMCC">
      <description>Cortex-M7 processor based device in little endian mode for the Arm Compiler</description>
      <require condition="CM7_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM7_BE_ARMCC">
      <description>Cortex-M7 processor based device in big endian mode for the Arm Compiler</description>
      <require condition="CM7_ARMCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM7_FP_ARMCC">
      <description>Cortex-M7 processor based device using Floating Point Unit for the Arm Compiler</description>
      <require condition="CM7_FP"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <!-- <condition id="CM7_FP_ARMCC5">
      <description>Cortex-M7 processor based device using Floating Point Unit for the Arm Compiler 5</description>
      <require condition="CM7_FP"/>
      <require condition="ARMCC5"/>
    </condition>
    <condition id="CM7_FP_ARMCC6">
      <description>Cortex-M7 processor based device using Floating Point Unit for the Arm Compiler 6</description>
      <require condition="CM7_FP"/>
      <require condition="ARMCC6"/>
    </condition> -->
    <condition id="CM7_FP_LE_ARMCC">
      <description>Cortex-M7 processor based device using Floating Point Unit in little endian mode for the Arm Compiler</description>
      <require condition="CM7_FP_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM7_FP_BE_ARMCC">
      <description>Cortex-M7 processor based device using Floating Point Unit in big endian mode for the Arm Compiler</description>
      <require condition="CM7_FP_ARMCC"/>
      <require Dendian="Big-endian"/>
    </condition>
<!-- 
    <condition id="CM23_ARMCC">
      <description>Cortex-M23 processor based device for the Arm Compiler</description>
      <require condition="CM23"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM23_LE_ARMCC">
      <description>Cortex-M23 processor based device in little endian mode for the Arm Compiler</description>
      <require condition="CM23_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM33_ARMCC">
      <description>Cortex-M33 processor based device for the Arm Compiler</description>
      <require condition="CM33"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM33_LE_ARMCC">
      <description>Cortex-M33 processor based device in little endian mode for the Arm Compiler</description>
      <require condition="CM33_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM33_FP_ARMCC">
      <description>Cortex-M33 processor based device using Floating Point Unit for the Arm Compiler</description>
      <require condition="CM33_FP"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM33_FP_LE_ARMCC">
      <description>Cortex-M33 processor based device using Floating Point Unit in little endian mode for the Arm Compiler</description>
      <require condition="CM33_FP_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM35P_ARMCC">
      <description>Cortex-M35P processor based device for the Arm Compiler</description>
      <require condition="CM35P"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM35P_LE_ARMCC">
      <description>Cortex-M35P processor based device in little endian mode for the Arm Compiler</description>
      <require condition="CM35P_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM35P_FP_ARMCC">
      <description>Cortex-M35P processor based device using Floating Point Unit for the Arm Compiler</description>
      <require condition="CM35P_FP"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM35P_FP_LE_ARMCC">
      <description>Cortex-M35P processor based device using Floating Point Unit in little endian mode for the Arm Compiler</description>
      <require condition="CM35P_FP_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM55_NOFPU_NOMVE_ARMCC">
      <description>Cortex-M55 processor, no FPU, no MVE, Arm Compiler</description>
      <require condition="CM55_NOFPU_NOMVE"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM55_NOFPU_MVE_ARMCC">
      <description>Cortex-M55 processor, no FPU, MVE, Arm Compiler</description>
      <require condition="CM55_NOFPU_MVE"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM55_FPU_ARMCC">
      <description>Cortex-M55 processor, FPU, Arm Compiler</description>
      <require condition="CM55_FPU"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM55_NOFPU_NOMVE_LE_ARMCC">
      <description>Cortex-M55 processor, little endian, no FPU, no MVE, Arm Compiler</description>
      <require condition="CM55_NOFPU_NOMVE_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM55_FPU_LE_ARMCC">
      <description>Cortex-M55 processor, little endian, FPU, Arm Compiler</description>
      <require condition="CM55_FPU_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MBL_ARMCC">
      <description>Armv8-M Baseline processor based device for the Arm Compiler</description>
      <require condition="ARMv8MBL"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="ARMv8MBL_LE_ARMCC">
      <description>Armv8-M Baseline processor based device in little endian mode for the Arm Compiler</description>
      <require condition="ARMv8MBL_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MML_ARMCC">
      <description>Armv8-M Mainline processor based device for the Arm Compiler</description>
      <require condition="ARMv8MML"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="ARMv8MML_LE_ARMCC">
      <description>Armv8-M Mainline processor based device in little endian mode for the Arm Compiler</description>
      <require condition="ARMv8MML_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MML_FP_ARMCC">
      <description>Armv8-M Mainline processor based device using Floating Point Unit for the Arm Compiler</description>
      <require condition="ARMv8MML_FP"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="ARMv8MML_FP_LE_ARMCC">
      <description>Armv8-M Mainline processor based device using Floating Point Unit in little endian mode for the Arm Compiler</description>
      <require condition="ARMv8MML_FP_ARMCC"/>
      <require Dendian="Little-endian"/>
    </condition> -->

    <condition id="TZ Secure ARMCC6">
      <description>TrustZone (Secure), Arm Compiler</description>
      <require condition="TZ Secure"/>
      <require condition="ARMCC6"/>
    </condition>
    <condition id="TZ Non-secure ARMCC6">
      <description>TrustZone (Non-secure), Arm Compiler</description>
      <require condition="TZ Non-secure"/>
      <require condition="ARMCC6"/>
    </condition>
    <condition id="TZ Unavailable ARMCC6">
      <description>TrustZone not available, Arm Compiler</description>
      <require condition="TZ Unavailable"/>
      <require condition="ARMCC6"/>
    </condition>

    <!-- GCC compiler -->
    <!-- <condition id="CA_GCC">
      <description>Cortex-A5, Cortex-A7 or Cortex-A9 processor based device for the GCC Compiler</description>
      <require condition="ARMv7-A Device"/>
      <require Tcompiler="GCC"/>
    </condition> -->

    <condition id="CM0_GCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device for the GCC Compiler</description>
      <require condition="CM0"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM0_LE_GCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in little endian mode for the GCC Compiler</description>
      <require condition="CM0_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM0_BE_GCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in big endian mode for the GCC Compiler</description>
      <require condition="CM0_GCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM1_GCC">
      <description>Cortex-M1 based device for the GCC Compiler</description>
      <require condition="CM1"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM1_LE_GCC">
      <description>Cortex-M1 based device in little endian mode for the GCC Compiler</description>
      <require condition="CM1_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM1_BE_GCC">
      <description>Cortex-M1 based device in big endian mode for the GCC Compiler</description>
      <require condition="CM1_GCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM3_GCC">
      <description>Cortex-M3 or SC300 processor based device for the GCC Compiler</description>
      <require condition="CM3"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM3_LE_GCC">
      <description>Cortex-M3 or SC300 processor based device in little endian mode for the GCC Compiler</description>
      <require condition="CM3_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM3_BE_GCC">
      <description>Cortex-M3 or SC300 processor based device in big endian mode for the GCC Compiler</description>
      <require condition="CM3_GCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM4_GCC">
      <description>Cortex-M4 processor based device for the GCC Compiler</description>
      <require condition="CM4"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM4_LE_GCC">
      <description>Cortex-M4 processor based device in little endian mode for the GCC Compiler</description>
      <require condition="CM4_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM4_BE_GCC">
      <description>Cortex-M4 processor based device in big endian mode for the GCC Compiler</description>
      <require condition="CM4_GCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM4_FP_GCC">
      <description>Cortex-M4 processor based device using Floating Point Unit for the GCC Compiler</description>
      <require condition="CM4_FP"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM4_FP_LE_GCC">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the GCC Compiler</description>
      <require condition="CM4_FP_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM4_FP_BE_GCC">
      <description>Cortex-M4 processor based device using Floating Point Unit in big endian mode for the GCC Compiler</description>
      <require condition="CM4_FP_GCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM7_GCC">
      <description>Cortex-M7 processor based device for the GCC Compiler</description>
      <require condition="CM7"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM7_LE_GCC">
      <description>Cortex-M7 processor based device in little endian mode for the GCC Compiler</description>
      <require condition="CM7_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM7_BE_GCC">
      <description>Cortex-M7 processor based device in big endian mode for the GCC Compiler</description>
      <require condition="CM7_GCC"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM7_FP_GCC">
      <description>Cortex-M7 processor based device using Floating Point Unit for the GCC Compiler</description>
      <require condition="CM7_FP"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM7_FP_LE_GCC">
      <description>Cortex-M7 processor based device using Floating Point Unit in little endian mode for the GCC Compiler</description>
      <require condition="CM7_FP_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM7_FP_BE_GCC">
      <description>Cortex-M7 processor based device using Floating Point Unit in big endian mode for the GCC Compiler</description>
      <require condition="CM7_FP_GCC"/>
      <require Dendian="Big-endian"/>
    </condition>
<!-- 
    <condition id="CM23_GCC">
      <description>Cortex-M23 processor based device for the GCC Compiler</description>
      <require condition="CM23"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM23_LE_GCC">
      <description>Cortex-M23 processor based device in little endian mode for the GCC Compiler</description>
      <require condition="CM23_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM33_GCC">
      <description>Cortex-M33 processor based device for the GCC Compiler</description>
      <require condition="CM33"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM33_LE_GCC">
      <description>Cortex-M33 processor based device in little endian mode for the GCC Compiler</description>
      <require condition="CM33_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM33_FP_GCC">
      <description>Cortex-M33 processor based device using Floating Point Unit for the GCC Compiler</description>
      <require condition="CM33_FP"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM33_FP_LE_GCC">
      <description>Cortex-M33 processor based device using Floating Point Unit in little endian mode for the GCC Compiler</description>
      <require condition="CM33_FP_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM35P_GCC">
      <description>Cortex-M35P processor based device for the GCC Compiler</description>
      <require condition="CM35P"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM35P_LE_GCC">
      <description>Cortex-M35P processor based device in little endian mode for the GCC Compiler</description>
      <require condition="CM35P_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM35P_FP_GCC">
      <description>Cortex-M35P processor based device using Floating Point Unit for the GCC Compiler</description>
      <require condition="CM35P_FP"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM35P_FP_LE_GCC">
      <description>Cortex-M35P processor based device using Floating Point Unit in little endian mode for the GCC Compiler</description>
      <require condition="CM35P_FP_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM55_NOFPU_NOMVE_GCC">
      <description>Cortex-M55 processor, no FPU, no MVE, GCC Compiler</description>
      <require condition="CM55_NOFPU_NOMVE"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM55_NOFPU_MVE_GCC">
      <description>Cortex-M55 processor, no FPU, MVE, GCC Compiler</description>
      <require condition="CM55_NOFPU_MVE"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM55_FPU_GCC">
      <description>Cortex-M55 processor, FPU, GCC Compiler</description>
      <require condition="CM55_FPU"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM55_NOFPU_NOMVE_LE_GCC">
      <description>Cortex-M55 processor, little endian, no FPU, no MVE, GCC Compiler</description>
      <require condition="CM55_NOFPU_NOMVE_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM55_FPU_LE_GCC">
      <description>Cortex-M55 processor, little endian, FPU, GCC Compiler</description>
      <require condition="CM55_FPU_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MBL_GCC">
      <description>Armv8-M Baseline processor based device for the GCC Compiler</description>
      <require condition="ARMv8MBL"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="ARMv8MBL_LE_GCC">
      <description>Armv8-M Baseline processor based device in little endian mode for the GCC Compiler</description>
      <require condition="ARMv8MBL_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MML_GCC">
      <description>Armv8-M Mainline processor based device for the GCC Compiler</description>
      <require condition="ARMv8MML"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="ARMv8MML_LE_GCC">
      <description>Armv8-M Mainline processor based device in little endian mode for the GCC Compiler</description>
      <require condition="ARMv8MML_GCC"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MML_FP_GCC">
      <description>Armv8-M Mainline processor based device using Floating Point Unit for the GCC Compiler</description>
      <require condition="ARMv8MML_FP"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="ARMv8MML_FP_LE_GCC">
      <description>Armv8-M Mainline processor based device using Floating Point Unit in little endian mode for the GCC Compiler</description>
      <require condition="ARMv8MML_FP_GCC"/>
      <require Dendian="Little-endian"/>
    </condition> -->

    <!-- IAR compiler -->
    <!-- <condition id="CA_IAR">
      <description>Cortex-A5, Cortex-A7 or Cortex-A9 processor based device for the IAR Compiler</description>
      <require condition="ARMv7-A Device"/>
      <require Tcompiler="IAR"/>
    </condition> -->

    <condition id="CM0_IAR">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device for the IAR Compiler</description>
      <require condition="CM0"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM0_LE_IAR">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in little endian mode for the IAR Compiler</description>
      <require condition="CM0_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM0_BE_IAR">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in big endian mode for the IAR Compiler</description>
      <require condition="CM0_IAR"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM1_IAR">
      <description>Cortex-M1 based device for the IAR Compiler</description>
      <require condition="CM1"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM1_LE_IAR">
      <description>Cortex-M1 based device in little endian mode for the IAR Compiler</description>
      <require condition="CM1_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM1_BE_IAR">
      <description>Cortex-M1 based device in big endian mode for the IAR Compiler</description>
      <require condition="CM1_IAR"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM3_IAR">
      <description>Cortex-M3 or SC300 processor based device for the IAR Compiler</description>
      <require condition="CM3"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM3_LE_IAR">
      <description>Cortex-M3 or SC300 processor based device in little endian mode for the IAR Compiler</description>
      <require condition="CM3_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM3_BE_IAR">
      <description>Cortex-M3 or SC300 processor based device in big endian mode for the IAR Compiler</description>
      <require condition="CM3_IAR"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM4_IAR">
      <description>Cortex-M4 processor based device for the IAR Compiler</description>
      <require condition="CM4"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM4_LE_IAR">
      <description>Cortex-M4 processor based device in little endian mode for the IAR Compiler</description>
      <require condition="CM4_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM4_BE_IAR">
      <description>Cortex-M4 processor based device in big endian mode for the IAR Compiler</description>
      <require condition="CM4_IAR"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM4_FP_IAR">
      <description>Cortex-M4 processor based device using Floating Point Unit for the IAR Compiler</description>
      <require condition="CM4_FP"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM4_FP_LE_IAR">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the IAR Compiler</description>
      <require condition="CM4_FP_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM4_FP_BE_IAR">
      <description>Cortex-M4 processor based device using Floating Point Unit in big endian mode for the IAR Compiler</description>
      <require condition="CM4_FP_IAR"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM7_IAR">
      <description>Cortex-M7 processor based device for the IAR Compiler</description>
      <require condition="CM7"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM7_LE_IAR">
      <description>Cortex-M7 processor based device in little endian mode for the IAR Compiler</description>
      <require condition="CM7_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM7_BE_IAR">
      <description>Cortex-M7 processor based device in big endian mode for the IAR Compiler</description>
      <require condition="CM7_IAR"/>
      <require Dendian="Big-endian"/>
    </condition>

    <condition id="CM7_FP_IAR">
      <description>Cortex-M7 processor based device using Floating Point Unit for the IAR Compiler</description>
      <require condition="CM7_FP"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM7_FP_LE_IAR">
      <description>Cortex-M7 processor based device using Floating Point Unit in little endian mode for the IAR Compiler</description>
      <require condition="CM7_FP_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM7_FP_BE_IAR">
      <description>Cortex-M7 processor based device using Floating Point Unit in big endian mode for the IAR Compiler</description>
      <require condition="CM7_FP_IAR"/>
      <require Dendian="Big-endian"/>
    </condition>
<!-- 
    <condition id="CM23_IAR">
      <description>Cortex-M23 processor based device for the IAR Compiler</description>
      <require condition="CM23"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM23_LE_IAR">
      <description>Cortex-M23 processor based device in little endian mode for the IAR Compiler</description>
      <require condition="CM23_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM33_IAR">
      <description>Cortex-M33 processor based device for the IAR Compiler</description>
      <require condition="CM33"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM33_LE_IAR">
      <description>Cortex-M33 processor based device in little endian mode for the IAR Compiler</description>
      <require condition="CM33_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM33_FP_IAR">
      <description>Cortex-M33 processor based device using Floating Point Unit for the IAR Compiler</description>
      <require condition="CM33_FP"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM33_FP_LE_IAR">
      <description>Cortex-M33 processor based device using Floating Point Unit in little endian mode for the IAR Compiler</description>
      <require condition="CM33_FP_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM35P_IAR">
      <description>Cortex-M35P processor based device for the IAR Compiler</description>
      <require condition="CM35P"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM35P_LE_IAR">
      <description>Cortex-M35P processor based device in little endian mode for the IAR Compiler</description>
      <require condition="CM35P_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM35P_FP_IAR">
      <description>Cortex-M35P processor based device using Floating Point Unit for the IAR Compiler</description>
      <require condition="CM35P_FP"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM35P_FP_LE_IAR">
      <description>Cortex-M35P processor based device using Floating Point Unit in little endian mode for the IAR Compiler</description>
      <require condition="CM35P_FP_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="CM55_NOFPU_NOMVE_IAR">
      <description>Cortex-M55 processor, no FPU, no MVE, IAR Compiler</description>
      <require condition="CM55_NOFPU_NOMVE"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM55_NOFPU_MVE_IAR">
      <description>Cortex-M55 processor, no FPU, MVE, IAR Compiler</description>
      <require condition="CM55_NOFPU_MVE"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM55_FPU_IAR">
      <description>Cortex-M55 processor, FPU, IAR Compiler</description>
      <require condition="CM55_FPU"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM55_NOFPU_NOMVE_LE_IAR">
      <description>Cortex-M55 processor, little endian, no FPU, no MVE, IAR Compiler</description>
      <require condition="CM55_NOFPU_NOMVE_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>
    <condition id="CM55_FPU_LE_IAR">
      <description>Cortex-M55 processor, little endian, FPU, IAR Compiler</description>
      <require condition="CM55_FPU_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MBL_IAR">
      <description>Armv8-M Baseline processor based device for the IAR Compiler</description>
      <require condition="ARMv8MBL"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="ARMv8MBL_LE_IAR">
      <description>Armv8-M Baseline processor based device in little endian mode for the IAR Compiler</description>
      <require condition="ARMv8MBL_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MML_IAR">
      <description>Armv8-M Mainline processor based device for the IAR Compiler</description>
      <require condition="ARMv8MML"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="ARMv8MML_LE_IAR">
      <description>Armv8-M Mainline processor based device in little endian mode for the IAR Compiler</description>
      <require condition="ARMv8MML_IAR"/>
      <require Dendian="Little-endian"/>
    </condition>

    <condition id="ARMv8MML_FP_IAR">
      <description>Armv8-M Mainline processor based device using Floating Point Unit for the IAR Compiler</description>
      <require condition="ARMv8MML_FP"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="ARMv8MML_FP_LE_IAR">
      <description>Armv8-M Mainline processor based device using Floating Point Unit in little endian mode for the IAR Compiler</description>
      <require condition="ARMv8MML_FP_IAR"/>
      <require Dendian="Little-endian"/>
    </condition> -->

    <!-- conditions selecting single devices and CMSIS Core -->
    <condition id="ARMCM0 CMSIS">
      <description>Generic Arm Cortex-M0 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM0"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM0+ CMSIS">
      <description>Generic Arm Cortex-M0+ device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM0P*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM1 CMSIS">
      <description>Generic Arm Cortex-M1 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM1"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM3 CMSIS">
      <description>Generic Arm Cortex-M3 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM3"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM4 CMSIS">
      <description>Generic Arm Cortex-M4 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM4*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM7 CMSIS">
      <description>Generic Arm Cortex-M7 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM7*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM23 CMSIS">
      <description>Generic Arm Cortex-M23 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM23*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM33 CMSIS">
      <description>Generic Arm Cortex-M33 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM33*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM35P CMSIS">
      <description>Generic Arm Cortex-M35P device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM35P*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM55 CMSIS">
      <description>Generic Arm Cortex-M55 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM55*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMSC000 CMSIS">
      <description>Generic Arm SC000 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMSC000"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMSC300 CMSIS">
      <description>Generic Arm SC300 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMSC300"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMv8MBL CMSIS">
      <description>Generic Armv8-M Baseline device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMv8MBL"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMv8MML CMSIS">
      <description>Generic Armv8-M Mainline device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMv8MML*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMv81MML CMSIS">
      <description>Generic Armv8.1-M Mainline device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMv81MML*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCA5 CMSIS">
      <description>Generic Arm Cortex-A5 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCA5"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCA7 CMSIS">
      <description>Generic Arm Cortex-A7 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCA7"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCA9 CMSIS">
      <description>Generic Arm Cortex-A9 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCA9"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <!-- CMSIS DSP -->
    <condition id="CMSIS DSP">
      <description>Components required for DSP</description>
      <require condition="ARMv6_7_8-M Device"/>
      <require condition="ARMCC GCC IAR"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <!-- CMSIS NN -->
    <!-- <condition id="CMSIS NN">
      <description>Components required for NN</description>
      <require Cclass="CMSIS" Cgroup="DSP"/>
    </condition> -->


    <!-- RTOS TencentOS tiny -->
    <condition id="RTOS TencentOS tiny">
      <description>Components required for RTOS TOS tiny</description>
      <require condition="ARMv6_7-M Device"/>
      <require condition="ARMCC GCC IAR"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="Startup"/>      
      <deny    Cclass="CMSIS"  Cgroup="RTOS" Csub="Keil RTX"/>   
      <deny    Cclass="CMSIS"  Cgroup="RTOS" Csub="Keil RTX5"/>
      <deny    Cclass="CMSIS"  Cgroup="RTOS2" Csub="Keil RTX5"/>     
    </condition>

    <!-- OS Tick -->
    <!-- <condition id="OS Tick PTIM">
      <description>Components required for OS Tick Private Timer</description>
      <require condition="CA5_CA9"/>
      <require Cclass="Device" Cgroup="IRQ Controller"/>
    </condition>

    <condition id="OS Tick GTIM">
      <description>Components required for OS Tick Generic Physical Timer</description>
      <require condition="CA7"/>
      <require Cclass="Device" Cgroup="IRQ Controller"/>
    </condition> -->

  </conditions>

  <components>
    <!-- CMSIS-Core component -->
    <!-- <component Cclass="CMSIS" Cgroup="CORE" Cversion="5.5.0"  condition="ARMv6_7_8-M Device" > -->
      <!-- <description>CMSIS-CORE for Cortex-M with TencentOS_tiny</description>
      <files> -->
        <!-- CPU independent -->
        <!-- <file category="doc"     name="CMSIS/Documentation/Core/html/index.html"/>
        <file category="include" name="CMSIS/Core/Include/"/>
        <file category="header"  name="CMSIS/Core/Include/tz_context.h" condition="TrustZone"/> -->
        <!-- Code template -->
        <!-- <file category="sourceC" attr="template" condition="TZ Secure" name="CMSIS/Core/Template/ARMv8-M/main_s.c"     version="1.1.1" select="Secure mode 'main' module for ARMv8-M"/>
        <file category="sourceC" attr="template" condition="TZ Secure" name="CMSIS/Core/Template/ARMv8-M/tz_context.c" version="1.1.1" select="RTOS Context Management (TrustZone for ARMv8-M)" />
      </files> -->
    <!-- </component>   -->

    <!-- CMSIS-Startup components -->
    <!-- Cortex-M0 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM0 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M0 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM0/Include/ARMCM0.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM0/Source/startup_ARMCM0.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0/Source/ARM/ARMCM0_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0/Source/ARM/ARMCM0_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM0/Source/system_ARMCM0.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM0 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M0 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM0/Include/ARMCM0.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM0/Source/ARM/startup_ARMCM0.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM0/Source/GCC/startup_ARMCM0.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM0/Source/IAR/startup_ARMCM0.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM0/Source/system_ARMCM0.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M0+ -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM0+ CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M0+ device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM0plus/Include/ARMCM0plus.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM0plus/Source/startup_ARMCM0plus.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0plus/Source/ARM/ARMCM0plus_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0plus/Source/ARM/ARMCM0plus_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0plus/Source/GCC/gcc_arm.ld"           version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM0plus/Source/system_ARMCM0plus.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.3.0" condition="ARMCM0+ CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M0+ device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM0plus/Include/ARMCM0plus.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM0plus/Source/ARM/startup_ARMCM0plus.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM0plus/Source/GCC/startup_ARMCM0plus.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM0plus/Source/GCC/gcc_arm.ld"           version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM0plus/Source/IAR/startup_ARMCM0plus.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM0plus/Source/system_ARMCM0plus.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M1 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM1 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M1 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM1/Include/ARMCM1.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM1/Source/startup_ARMCM1.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM1/Source/ARM/ARMCM1_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCM1/Source/ARM/ARMCM1_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM1/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM1/Source/system_ARMCM1.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM1 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M1 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM1/Include/ARMCM1.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM1/Source/ARM/startup_ARMCM1.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM1/Source/GCC/startup_ARMCM1.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM1/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM1/Source/IAR/startup_ARMCM1.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM1/Source/system_ARMCM1.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M3 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM3 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M3 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM3/Include/ARMCM3.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM3/Source/startup_ARMCM3.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM3/Source/ARM/ARMCM3_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCM3/Source/ARM/ARMCM3_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM3/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM3/Source/system_ARMCM3.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM3 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M3 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMCM3/Include/ARMCM3.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM3/Source/ARM/startup_ARMCM3.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM3/Source/GCC/startup_ARMCM3.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM3/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM3/Source/IAR/startup_ARMCM3.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM3/Source/system_ARMCM3.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M4 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM4 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M4 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include" name="Device/ARM/ARMCM4/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM4/Source/startup_ARMCM4.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM4/Source/ARM/ARMCM4_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCM4/Source/ARM/ARMCM4_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM4/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
       <file category="sourceC"       name="Device/ARM/ARMCM4/Source/system_ARMCM4.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM4 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M4 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include" name="Device/ARM/ARMCM4/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM4/Source/ARM/startup_ARMCM4.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM4/Source/GCC/startup_ARMCM4.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM4/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM4/Source/IAR/startup_ARMCM4.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM4/Source/system_ARMCM4.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M7 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM7 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M7 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="Device/ARM/ARMCM7/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM7/Source/startup_ARMCM7.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM7/Source/ARM/ARMCM7_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCM7/Source/ARM/ARMCM7_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM7/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM7/Source/system_ARMCM7.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM7 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M7 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="Device/ARM/ARMCM7/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM7/Source/ARM/startup_ARMCM7.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM7/Source/GCC/startup_ARMCM7.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM7/Source/GCC/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM7/Source/IAR/startup_ARMCM7.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM7/Source/system_ARMCM7.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M23 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMCM23 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M23 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="Device/ARM/ARMCM23/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM23/Source/startup_ARMCM23.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/ARM/ARMCM23_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/ARM/ARMCM23_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/ARM/ARMCM23_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/GCC/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM23/Source/system_ARMCM23.c"     version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMCM23/Include/Template/partition_ARMCM23.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.0" condition="ARMCM23 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M23 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMCM23/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM23/Source/ARM/startup_ARMCM23.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/ARM/ARMCM23_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/ARM/ARMCM23_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/ARM/ARMCM23_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM23/Source/GCC/startup_ARMCM23.S"         version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM23/Source/GCC/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM23/Source/IAR/startup_ARMCM23.s" version="1.1.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM23/Source/system_ARMCM23.c"      version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMCM23/Include/Template/partition_ARMCM23.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-M33 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMCM33 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M33 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="Device/ARM/ARMCM33/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM33/Source/startup_ARMCM33.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/ARM/ARMCM33_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/ARM/ARMCM33_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/ARM/ARMCM33_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/GCC/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM33/Source/system_ARMCM33.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMCM33/Include/Template/partition_ARMCM33.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.3.0" condition="ARMCM33 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M33 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMCM33/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM33/Source/ARM/startup_ARMCM33.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/ARM/ARMCM33_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/ARM/ARMCM33_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/ARM/ARMCM33_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM33/Source/GCC/startup_ARMCM33.S"         version="2.3.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM33/Source/GCC/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM33/Source/IAR/startup_ARMCM33.s"         version="1.1.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM33/Source/system_ARMCM33.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMCM33/Include/Template/partition_ARMCM33.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-M35P -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMCM35P CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M35P device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="Device/ARM/ARMCM35P/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM35P/Source/startup_ARMCM35P.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/ARM/ARMCM35P_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/ARM/ARMCM35P_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/ARM/ARMCM35P_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/GCC/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM35P/Source/system_ARMCM35P.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMCM35P/Include/Template/partition_ARMCM35P.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.0" condition="ARMCM35P CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M35P device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMCM35P/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMCM35P/Source/ARM/startup_ARMCM35P.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/ARM/ARMCM35P_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/ARM/ARMCM35P_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/ARM/ARMCM35P_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM35P/Source/GCC/startup_ARMCM35P.S"         version="1.3.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMCM35P/Source/GCC/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCM35P/Source/IAR/startup_ARMCM35P.s"         version="2.1.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCM35P/Source/system_ARMCM35P.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMCM35P/Include/Template/partition_ARMCM35P.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-M55 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="1.1.0" condition="ARMCM55 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Cortex-M55 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMCM55/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMCM55/Source/startup_ARMCM55.c"             version="1.1.0" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMCM55/Source/ARM/ARMCM55_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM55/Source/ARM/ARMCM55_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM55/Source/ARM/ARMCM55_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCM55/Source/GCC/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMCM55/Source/system_ARMCM55.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMCM55/Include/Template/partition_ARMCM55.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-SC000 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMSC000 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm SC000 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMSC000/Include/ARMSC000.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMSC000/Source/startup_ARMSC000.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMSC000/Source/ARM/ARMSC000_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMSC000/Source/ARM/ARMSC000_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMSC000/Source/GCC/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMSC000/Source/system_ARMSC000.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.3" condition="ARMSC000 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm SC000 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMSC000/Include/ARMSC000.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMSC000/Source/ARM/startup_ARMSC000.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMSC000/Source/GCC/startup_ARMSC000.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMSC000/Source/GCC/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMSC000/Source/IAR/startup_ARMSC000.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMSC000/Source/system_ARMSC000.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-SC300 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMSC300 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm SC300 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMSC300/Include/ARMSC300.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMSC300/Source/startup_ARMSC300.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMSC300/Source/ARM/ARMSC300_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMSC300/Source/ARM/ARMSC300_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMSC300/Source/GCC/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMSC300/Source/system_ARMSC300.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.3" condition="ARMSC300 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm SC300 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="Device/ARM/ARMSC300/Include/ARMSC300.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMSC300/Source/ARM/startup_ARMSC300.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMSC300/Source/GCC/startup_ARMSC300.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMSC300/Source/GCC/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMSC300/Source/IAR/startup_ARMSC300.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMSC300/Source/system_ARMSC300.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- ARMv8MBL -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMv8MBL CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Armv8-M Baseline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="Device/ARM/ARMv8MBL/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMv8MBL/Source/startup_ARMv8MBL.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/ARM/ARMv8MBL_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/ARM/ARMv8MBL_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/ARM/ARMv8MBL_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/GCC/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMv8MBL/Source/system_ARMv8MBL.c"             version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMv8MBL/Include/Template/partition_ARMv8MBL.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.0" condition="ARMv8MBL CMSIS">
      <description>DEPRECATED: System and Startup for Generic Armv8-M Baseline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMv8MBL/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMv8MBL/Source/ARM/startup_ARMv8MBL.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/ARM/ARMv8MBL_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/ARM/ARMv8MBL_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/ARM/ARMv8MBL_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="sourceAsm"    name="Device/ARM/ARMv8MBL/Source/GCC/startup_ARMv8MBL.S"         version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MBL/Source/GCC/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMv8MBL/Source/system_ARMv8MBL.c"      version="1.0.1" attr="config" condition="ARMCC GCC"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMv8MBL/Include/Template/partition_ARMv8MBL.h" version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- ARMv8MML -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMv8MML CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Armv8-M Mainline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMv8MML/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMv8MML/Source/startup_ARMv8MML.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/ARM/ARMv8MML_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/ARM/ARMv8MML_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/ARM/ARMv8MML_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/GCC/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMv8MML/Source/system_ARMv8MML.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMv8MML/Include/Template/partition_ARMv8MML.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.3.0" condition="ARMv8MML CMSIS">
      <description>DEPRECATED: System and Startup for Generic Armv8-M Mainline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMv8MML/Include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="Device/ARM/ARMv8MML/Source/ARM/startup_ARMv8MML.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/ARM/ARMv8MML_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/ARM/ARMv8MML_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/ARM/ARMv8MML_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="sourceAsm"    name="Device/ARM/ARMv8MML/Source/GCC/startup_ARMv8MML.S"         version="2.3.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="Device/ARM/ARMv8MML/Source/GCC/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMv8MML/Source/system_ARMv8MML.c"              version="1.0.1" attr="config" condition="ARMCC GCC"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMv8MML/Include/Template/partition_ARMv8MML.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- ARMv81MML -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.2.0" condition="ARMv81MML CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Armv8.1-M Mainline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMv81MML/Include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="Device/ARM/ARMv81MML/Source/startup_ARMv81MML.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="Device/ARM/ARMv81MML/Source/ARM/ARMv81MML_ac6_s.sct"         version="1.1.0" attr="config" condition="TZ Secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv81MML/Source/ARM/ARMv81MML_ac6.sct"           version="1.1.0" attr="config" condition="TZ Non-secure ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv81MML/Source/ARM/ARMv81MML_ac6.sct"           version="1.1.0" attr="config" condition="TZ Unavailable ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMv81MML/Source/GCC/gcc_arm.ld"                  version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="Device/ARM/ARMv81MML/Source/system_ARMv81MML.c"              version="1.2.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="Device/ARM/ARMv81MML/Include/Template/partition_ARMv81MML.h" version="1.0.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-A5 -->
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.0.1" condition="ARMCA5 CMSIS">
      <description>System and Startup for Generic Arm Cortex-A5 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMCA5/Include/"/>
        <!-- startup / system / mmu files -->
        <file category="sourceC"      name="Device/ARM/ARMCA5/Source/AC5/startup_ARMCA5.c" version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCA5/Source/AC5/ARMCA5.sct"       version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="sourceC"      name="Device/ARM/ARMCA5/Source/AC6/startup_ARMCA5.c" version="1.0.1" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCA5/Source/AC6/ARMCA5.sct"       version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="sourceC"      name="Device/ARM/ARMCA5/Source/GCC/startup_ARMCA5.c" version="1.0.1" attr="config" condition="GCC"/>
        <file category="other"        name="Device/ARM/ARMCA5/Source/GCC/ARMCA5.ld"        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCA5/Source/IAR/startup_ARMCA5.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="linkerScript" name="Device/ARM/ARMCA5/Source/IAR/ARMCA5.icf"       version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCA5/Source/system_ARMCA5.c"      version="1.0.1" attr="config"/>
        <file category="sourceC"      name="Device/ARM/ARMCA5/Source/mmu_ARMCA5.c"         version="1.2.0" attr="config"/>
        <file category="header"       name="Device/ARM/ARMCA5/Config/system_ARMCA5.h"      version="1.0.0" attr="config"/>
        <file category="header"       name="Device/ARM/ARMCA5/Config/mem_ARMCA5.h"         version="1.1.0" attr="config"/>

      </files>
    </component>

    <!-- Cortex-A7 -->
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.0.1" condition="ARMCA7 CMSIS">
      <description>System and Startup for Generic Arm Cortex-A7 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="Device/ARM/ARMCA7/Include/"/>
        <!-- startup / system / mmu files -->
        <file category="sourceC"      name="Device/ARM/ARMCA7/Source/AC5/startup_ARMCA7.c" version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCA7/Source/AC5/ARMCA7.sct"       version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="sourceC"      name="Device/ARM/ARMCA7/Source/AC6/startup_ARMCA7.c" version="1.0.1" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCA7/Source/AC6/ARMCA7.sct"       version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="sourceC"      name="Device/ARM/ARMCA7/Source/GCC/startup_ARMCA7.c" version="1.0.1" attr="config" condition="GCC"/>
        <file category="other"        name="Device/ARM/ARMCA7/Source/GCC/ARMCA7.ld"        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCA7/Source/IAR/startup_ARMCA7.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="linkerScript" name="Device/ARM/ARMCA7/Source/IAR/ARMCA7.icf"       version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCA7/Source/system_ARMCA7.c"      version="1.0.1" attr="config"/>
        <file category="sourceC"      name="Device/ARM/ARMCA7/Source/mmu_ARMCA7.c"         version="1.2.0" attr="config"/>
        <file category="header"       name="Device/ARM/ARMCA7/Config/system_ARMCA7.h"      version="1.0.0" attr="config"/>
        <file category="header"       name="Device/ARM/ARMCA7/Config/mem_ARMCA7.h"         version="1.1.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-A9 -->
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.0.2" condition="ARMCA9 CMSIS">
      <description>System and Startup for Generic Arm Cortex-A9 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="Device/ARM/ARMCA9/Include/"/>
        <!-- startup / system / mmu files -->
        <file category="sourceC"      name="Device/ARM/ARMCA9/Source/AC5/startup_ARMCA9.c" version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="Device/ARM/ARMCA9/Source/AC5/ARMCA9.sct"       version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="sourceC"      name="Device/ARM/ARMCA9/Source/AC6/startup_ARMCA9.c" version="1.0.1" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="Device/ARM/ARMCA9/Source/AC6/ARMCA9.sct"       version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="sourceC"      name="Device/ARM/ARMCA9/Source/GCC/startup_ARMCA9.c" version="1.0.1" attr="config" condition="GCC"/>
        <file category="other"        name="Device/ARM/ARMCA9/Source/GCC/ARMCA9.ld"        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="Device/ARM/ARMCA9/Source/IAR/startup_ARMCA9.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="linkerScript" name="Device/ARM/ARMCA9/Source/IAR/ARMCA9.icf"       version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="Device/ARM/ARMCA9/Source/system_ARMCA9.c"      version="1.0.1" attr="config"/>
        <file category="sourceC"      name="Device/ARM/ARMCA9/Source/mmu_ARMCA9.c"         version="1.2.0" attr="config"/>
        <file category="header"       name="Device/ARM/ARMCA9/Config/system_ARMCA9.h"      version="1.0.0" attr="config"/>
        <file category="header"       name="Device/ARM/ARMCA9/Config/mem_ARMCA9.h"         version="1.1.0" attr="config"/>
      </files>
    </component>

    <!-- IRQ Controller -->
    <!-- <component Cclass="Device" Cgroup="IRQ Controller" Csub="GIC" Capiversion="1.0.0" Cversion="1.0.1" condition="ARMv7-A Device">
      <description>IRQ Controller implementation using GIC</description>
      <files>
        <file category="sourceC" name="CMSIS/Core_A/Source/irq_ctrl_gic.c"/>
      </files>
    </component> -->

    <!-- OS Tick -->
    <!-- <component Cclass="Device" Cgroup="OS Tick" Csub="Private Timer" Capiversion="1.0.1" Cversion="1.0.2" condition="OS Tick PTIM">
      <description>OS Tick implementation using Private Timer</description>
      <files>
        <file category="sourceC" name="CMSIS/RTOS2/Source/os_tick_ptim.c"/>
      </files>
    </component>

    <component Cclass="Device" Cgroup="OS Tick" Csub="Generic Physical Timer" Capiversion="1.0.1" Cversion="1.0.1" condition="OS Tick GTIM">
      <description>OS Tick implementation using Generic Physical Timer</description>
      <files>
        <file category="sourceC" name="CMSIS/RTOS2/Source/os_tick_gtim.c"/>
      </files>
    </component> -->

    <!-- CMSIS-DSP component -->
    <component Cclass="CMSIS" Cgroup="DSP" Cvariant="Source"  Cversion="1.10.0-dev" isDefaultVariant="true" condition="CMSIS DSP">
      <description>CMSIS-DSP Library for Cortex-M, SC000, and SC300</description>
      <files>
        <!-- CPU independent -->
        <file category="doc"      name="CMSIS/Documentation/DSP/html/index.html"/>
        <file category="header"   name="CMSIS/DSP/Include/arm_math.h"/>
        <file category="header"   name="CMSIS/DSP/Include/arm_math_f16.h"/>
        <file category="header"   name="CMSIS/DSP/Include/arm_common_tables.h"/>
        <file category="header"   name="CMSIS/DSP/Include/arm_common_tables_f16.h"/>
        <file category="header"   name="CMSIS/DSP/Include/arm_const_structs.h"/>
        <file category="header"   name="CMSIS/DSP/Include/arm_const_structs_f16.h"/>

        <file category="include"  name="CMSIS/DSP/PrivateInclude/"/>
        <file category="include"  name="CMSIS/DSP/Include/"/>

        <!-- DSP sources (core) -->
        <file category="source"   name="CMSIS/DSP/Source/BasicMathFunctions/BasicMathFunctions.c"/>

        <file category="source"   name="CMSIS/DSP/Source/QuaternionMathFunctions/QuaternionMathFunctions.c"/>

        <file category="source"   name="CMSIS/DSP/Source/BayesFunctions/BayesFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/CommonTables/CommonTables.c"/>
        <file category="source"   name="CMSIS/DSP/Source/ComplexMathFunctions/ComplexMathFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/ControllerFunctions/ControllerFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/DistanceFunctions/DistanceFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/FastMathFunctions/FastMathFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/FilteringFunctions/FilteringFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/MatrixFunctions/MatrixFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/StatisticsFunctions/StatisticsFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/SupportFunctions/SupportFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/SVMFunctions/SVMFunctions.c"/>
        <file category="source"   name="CMSIS/DSP/Source/TransformFunctions/TransformFunctions.c"/>

        <file category="source"   name="CMSIS/DSP/Source/InterpolationFunctions/InterpolationFunctions.c"/>

        <!-- DSP sources F16 versions -->
        <file category="source"   name="CMSIS/DSP/Source/BasicMathFunctions/BasicMathFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/ComplexMathFunctions/ComplexMathFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/FilteringFunctions/FilteringFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/CommonTables/CommonTablesF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/TransformFunctions/TransformFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/MatrixFunctions/MatrixFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/InterpolationFunctions/InterpolationFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/StatisticsFunctions/StatisticsFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/SupportFunctions/SupportFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/FastMathFunctions/FastMathFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/DistanceFunctions/DistanceFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/BayesFunctions/BayesFunctionsF16.c"/>
        <file category="source"   name="CMSIS/DSP/Source/SVMFunctions/SVMFunctionsF16.c"/>

        <!-- Compute Library for Cortex-A -->
        <file category="header"   name="CMSIS/DSP/ComputeLibrary/Include/NEMath.h"        condition="ARMv7-A Device"/>
        <file category="source"   name="CMSIS/DSP/ComputeLibrary/Source/arm_cl_tables.c"  condition="ARMv7-A Device"/>
      </files>
    </component>


    <!-- CMSIS-RTOS Keil TencentOS tiny component -->
    <component Cclass="Tencent" Cgroup="RTOS" Csub="Keil TencentOS tiny" Cversion="1.6.0" isDefaultVariant="1" condition="RTOS TencentOS tiny">
      <description>RTOS TencentOS tiny implementation for Cortex-M</description>

      <files>
        <!-- CPU independent -->
        <file category="doc" name="Docs/TencentOS_Tiny_Pack.htm"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/INC/cmsis_os.h"/>
        <file category="header" attr="config"   name="CMSIS/RTOS/TencentOS_tiny/SRC/TOS_CONFIG/tos_config.h" version="1.0.1"/>

        <!-- RTX templates -->
        <!-- <file category="header" attr="template" name="CMSIS/RTOS/RTX/UserCodeTemplates/osObjects.h" select="CMSIS-RTOS 'main' function"/> -->
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/main.c"      select="TencentOS Tiny 'main' function"/>
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/MailQueue.c" select="TencentOS Tiny Mail Queue"/>
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/MemPool.c"   select="TencentOS Tiny Memory Pool"/>
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/MsgQueue.c"  select="TencentOS Tiny Message Queue"/>
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/Mutex.c"     select="TencentOS Tiny Mutex"/>
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/Semaphore.c" select="TencentOS Tiny Semaphore"/>
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/Thread.c"    select="TencentOS Tiny Thread"/>
        <file category="source" attr="template" name="CMSIS/RTOS/TencentOS_tiny/UserCodeTemplates/Timer.c"     select="TencentOS Tiny Timer"/>

        <!-- CPU and Compiler dependent -->
        <!-- Common -->   
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/common/tos_fault.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/common/tos_cpu.c"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/common/include/tos_cpu.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/common/include/tos_cpu_def.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/common/include/tos_cpu_types.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/common/include/tos_fault.h"/>

        <!-- ARMCC -->
        <file category="header" condition="CM0_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port.h"/>
        <file category="header" condition="CM0_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_config.h"/>
        <file category="source" condition="CM0_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_c.c"/>
        <file category="source" condition="CM0_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_s.S"/>

        <file category="header" condition="CM0_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port.h"/>
        <file category="header" condition="CM0_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_config.h"/>
        <file category="source" condition="CM0_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_c.c"/>
        <file category="source" condition="CM0_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_s.S"/>
        
        <file category="header" condition="CM1_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port.h"/>
        <file category="header" condition="CM1_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_config.h"/>
        <file category="source" condition="CM1_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_c.c"/>
        <file category="source" condition="CM1_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_s.S"/>

        <file category="header" condition="CM1_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port.h"/>
        <file category="header" condition="CM1_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_config.h"/>
        <file category="source" condition="CM1_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_c.c"/>
        <file category="source" condition="CM1_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/armcc/port_s.S"/>

        <file category="header" condition="CM3_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port.h"/>
        <file category="header" condition="CM3_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port_config.h"/>
        <file category="source" condition="CM3_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port_c.c"/>
        <file category="source" condition="CM3_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port_s.S"/>

        <file category="header" condition="CM3_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port.h"/>
        <file category="header" condition="CM3_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port_config.h"/>
        <file category="source" condition="CM3_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port_c.c"/>
        <file category="source" condition="CM3_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/armcc/port_s.S"/>

        <file category="header" condition="CM4_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port.h"/>
        <file category="header" condition="CM4_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_config.h"/>
        <file category="source" condition="CM4_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_c.c"/>
        <file category="source" condition="CM4_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_s.S"/>

        <file category="header" condition="CM4_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port.h"/>
        <file category="header" condition="CM4_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_config.h"/>
        <file category="source" condition="CM4_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_c.c"/>
        <file category="source" condition="CM4_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_s.S"/>

        <file category="header" condition="CM4_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port.h"/>
        <file category="header" condition="CM4_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_config.h"/>
        <file category="source" condition="CM4_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_c.c"/>
        <file category="source" condition="CM4_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_s.S"/>

        <file category="header" condition="CM4_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port.h"/>
        <file category="header" condition="CM4_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_config.h"/>
        <file category="source" condition="CM4_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_c.c"/>
        <file category="source" condition="CM4_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/armcc/port_s.S"/>

        <file category="header" condition="CM7_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port.h"/>
        <file category="header" condition="CM7_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_config.h"/>
        <file category="source" condition="CM7_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_c.c"/>
        <file category="source" condition="CM7_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_s.S"/>

        <file category="header" condition="CM7_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port.h"/>
        <file category="header" condition="CM7_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_config.h"/>
        <file category="source" condition="CM7_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_c.c"/>
        <file category="source" condition="CM7_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_s.S"/>

        <file category="header" condition="CM7_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port.h"/>
        <file category="header" condition="CM7_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_config.h"/>
        <file category="source" condition="CM7_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_c.c"/>
        <file category="source" condition="CM7_FP_LE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_s.S"/>
        
        <file category="header" condition="CM7_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port.h"/>
        <file category="header" condition="CM7_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_config.h"/>
        <file category="source" condition="CM7_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_c.c"/>
        <file category="source" condition="CM7_FP_BE_ARMCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/armcc/port_s.S"/>
        
        <!-- GCC -->
        <file category="header" condition="CM0_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port.h"/>
        <file category="header" condition="CM0_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_config.h"/>
        <file category="source" condition="CM0_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_c.c"/>
        <file category="source" condition="CM0_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_s.S"/>

        <file category="header" condition="CM0_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port.h"/>
        <file category="header" condition="CM0_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_config.h"/>
        <file category="source" condition="CM0_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_c.c"/>
        <file category="source" condition="CM0_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_s.S"/>
        
        <file category="header" condition="CM1_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port.h"/>
        <file category="header" condition="CM1_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_config.h"/>
        <file category="source" condition="CM1_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_c.c"/>
        <file category="source" condition="CM1_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_s.S"/>

        <file category="header" condition="CM1_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port.h"/>
        <file category="header" condition="CM1_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_config.h"/>
        <file category="source" condition="CM1_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_c.c"/>
        <file category="source" condition="CM1_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/gcc/port_s.S"/>

        <file category="header" condition="CM3_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port.h"/>
        <file category="header" condition="CM3_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port_config.h"/>
        <file category="source" condition="CM3_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port_c.c"/>
        <file category="source" condition="CM3_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port_s.S"/>

        <file category="header" condition="CM3_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port.h"/>
        <file category="header" condition="CM3_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port_config.h"/>
        <file category="source" condition="CM3_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port_c.c"/>
        <file category="source" condition="CM3_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/gcc/port_s.S"/>

        <file category="header" condition="CM4_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port.h"/>
        <file category="header" condition="CM4_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_config.h"/>
        <file category="source" condition="CM4_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_c.c"/>
        <file category="source" condition="CM4_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_s.S"/>

        <file category="header" condition="CM4_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port.h"/>
        <file category="header" condition="CM4_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_config.h"/>
        <file category="source" condition="CM4_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_c.c"/>
        <file category="source" condition="CM4_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_s.S"/>

        <file category="header" condition="CM4_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port.h"/>
        <file category="header" condition="CM4_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_config.h"/>
        <file category="source" condition="CM4_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_c.c"/>
        <file category="source" condition="CM4_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_s.S"/>

        <file category="header" condition="CM4_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port.h"/>
        <file category="header" condition="CM4_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_config.h"/>
        <file category="source" condition="CM4_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_c.c"/>
        <file category="source" condition="CM4_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/gcc/port_s.S"/>

        <file category="header" condition="CM7_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port.h"/>
        <file category="header" condition="CM7_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_config.h"/>
        <file category="source" condition="CM7_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_c.c"/>
        <file category="source" condition="CM7_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_s.S"/>

        <file category="header" condition="CM7_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port.h"/>
        <file category="header" condition="CM7_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_config.h"/>
        <file category="source" condition="CM7_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_c.c"/>
        <file category="source" condition="CM7_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_s.S"/>

        <file category="header" condition="CM7_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port.h"/>
        <file category="header" condition="CM7_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_config.h"/>
        <file category="source" condition="CM7_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_c.c"/>
        <file category="source" condition="CM7_FP_LE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_s.S"/>
        
        <file category="header" condition="CM7_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port.h"/>
        <file category="header" condition="CM7_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_config.h"/>
        <file category="source" condition="CM7_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_c.c"/>
        <file category="source" condition="CM7_FP_BE_GCC"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/gcc/port_s.S"/>
        <!-- IAR -->
        <file category="header" condition="CM0_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port.h"/>
        <file category="header" condition="CM0_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_config.h"/>
        <file category="source" condition="CM0_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_c.c"/>
        <file category="source" condition="CM0_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_s.S"/>

        <file category="header" condition="CM0_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port.h"/>
        <file category="header" condition="CM0_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_config.h"/>
        <file category="source" condition="CM0_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_c.c"/>
        <file category="source" condition="CM0_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_s.S"/>
        
        <file category="header" condition="CM1_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port.h"/>
        <file category="header" condition="CM1_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_config.h"/>
        <file category="source" condition="CM1_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_c.c"/>
        <file category="source" condition="CM1_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_s.S"/>

        <file category="header" condition="CM1_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port.h"/>
        <file category="header" condition="CM1_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_config.h"/>
        <file category="source" condition="CM1_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_c.c"/>
        <file category="source" condition="CM1_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m0+/iccarm/port_s.S"/>

        <file category="header" condition="CM3_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port.h"/>
        <file category="header" condition="CM3_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port_config.h"/>
        <file category="source" condition="CM3_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port_c.c"/>
        <file category="source" condition="CM3_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port_s.S"/>

        <file category="header" condition="CM3_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port.h"/>
        <file category="header" condition="CM3_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port_config.h"/>
        <file category="source" condition="CM3_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port_c.c"/>
        <file category="source" condition="CM3_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m3/iccarm/port_s.S"/>

        <file category="header" condition="CM4_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port.h"/>
        <file category="header" condition="CM4_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_config.h"/>
        <file category="source" condition="CM4_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_c.c"/>
        <file category="source" condition="CM4_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_s.S"/>

        <file category="header" condition="CM4_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port.h"/>
        <file category="header" condition="CM4_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_config.h"/>
        <file category="source" condition="CM4_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_c.c"/>
        <file category="source" condition="CM4_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_s.S"/>

        <file category="header" condition="CM4_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port.h"/>
        <file category="header" condition="CM4_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_config.h"/>
        <file category="source" condition="CM4_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_c.c"/>
        <file category="source" condition="CM4_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_s.S"/>

        <file category="header" condition="CM4_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port.h"/>
        <file category="header" condition="CM4_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_config.h"/>
        <file category="source" condition="CM4_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_c.c"/>
        <file category="source" condition="CM4_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m4/iccarm/port_s.S"/>

        <file category="header" condition="CM7_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port.h"/>
        <file category="header" condition="CM7_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_config.h"/>
        <file category="source" condition="CM7_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_c.c"/>
        <file category="source" condition="CM7_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_s.S"/>

        <file category="header" condition="CM7_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port.h"/>
        <file category="header" condition="CM7_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_config.h"/>
        <file category="source" condition="CM7_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_c.c"/>
        <file category="source" condition="CM7_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_s.S"/>

        <file category="header" condition="CM7_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port.h"/>
        <file category="header" condition="CM7_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_config.h"/>
        <file category="source" condition="CM7_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_c.c"/>
        <file category="source" condition="CM7_FP_LE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_s.S"/>
        
        <file category="header" condition="CM7_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port.h"/>
        <file category="header" condition="CM7_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_config.h"/>
        <file category="source" condition="CM7_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_c.c"/>
        <file category="source" condition="CM7_FP_BE_IAR"    name="CMSIS/RTOS/TencentOS_tiny/LIB/arm-v7m/cortex-m7/iccarm/port_s.S"/>




        <!-- kernel core -->
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_barrier.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_binary_heap.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_bitmap.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_char_fifo.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_compiler.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_completion.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_config_check.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_config_default.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_countdownlatch.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_event.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_global.h"/>
        <file category="header" attr="config"   name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_k.h" version="1.0.1"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_kerr.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_klib.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_ktypes.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_list.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_mail_queue.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_message_queue.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_mmblk.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_mmheap.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_mutex.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_pend.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_priority_mail_queue.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_priority_message_queue.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_priority_queue.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_ring_queue.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_robin.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_rwlock.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_sched.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_sem.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_slist.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_stopwatch.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_sys.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_task.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_tick.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_time.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_timer.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/tos_version.h"/>
        <file category="header" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/include/os_tick.h"/>        

        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_barrier.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_binary_heap.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_bitmap.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_char_fifo.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_completion.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_countdownlatch.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_event.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_global.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_mail_queue.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_message_queue.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_mmblk.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_mmheap.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_mutex.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_pend.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_priority_mail_queue.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_priority_message_queue.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_priority_queue.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_ring_queue.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_robin.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_rwlock.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_sched.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_sem.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_stopwatch.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_sys.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_task.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_tick.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_time.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/tos_timer.c"/>
        <file category="source" name="CMSIS/RTOS/TencentOS_tiny/SRC/core/cmsis_os.c"/>



      </files>
    </component>   


  </components>

  <!-- <boards>
    <board name="uVision Simulator" vendor="Keil">
      <description>uVision Simulator</description>
      <mountedDevice    deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P_MPU"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM1"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM3"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MBL"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv81MML_DSP_DP_MVE_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM55"/>
    </board>

    <board name="EWARM Simulator" vendor="IAR">
      <description>EWARM Simulator</description>
      <mountedDevice    deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P_MPU"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM1"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM3"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MBL"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv81MML_DSP_DP_MVE_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM55"/>
    </board>
  </boards> -->


</package>
